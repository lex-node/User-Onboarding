{"ast":null,"code":"var _jsxFileName = \"/home/derp/WebStorm/User-Onboarding/user-onboarding/src/Form.js\";\nimport React from \"react\";\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\n\nfunction LoginForm({\n  values,\n  errors,\n  touched,\n  isSubmitting\n}) {\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, touched.email && errors.email && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, errors.email), React.createElement(Field, {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, touched.password && errors.password && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, errors.password), React.createElement(Field, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Field, {\n    type: \"checkbox\",\n    name: \"tos\",\n    checked: values.tos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), \"Accept TOS\"), React.createElement(Field, {\n    component: \"select\",\n    name: \"meal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"gold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Gold\"), React.createElement(\"option\", {\n    value: \"silver\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Silver\"), React.createElement(\"option\", {\n    value: \"platinum\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Platinum\")), React.createElement(\"button\", {\n    disabled: isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Submit\"));\n}\n\nconst FormikLoginForm = withFormik({\n  mapPropsToValues({\n    email,\n    password,\n    tos,\n    meal\n  }) {\n    return {\n      email: email || \"\",\n      password: password || \"\",\n      tos: tos || false,\n      meal: meal || \"silver\"\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email(\"Email not valid\").required(\"Email is required\"),\n    password: Yup.string().min(16, \"Password must be 16 characters or longer\").required(\"Password is required\")\n  }),\n\n  handleSubmit(values, {\n    resetForm,\n    setErrors,\n    setSubmitting\n  }) {\n    if (values.email === \"alreadytaken@atb.dev\") {\n      setErrors({\n        email: \"That email is already taken\"\n      });\n    } else {\n      axios.post(\"https://yourdatabaseurlgoeshere.com\", values).then(res => {\n        console.log(res); // Data was created successfully and logs to console\n\n        resetForm();\n        setSubmitting(false);\n      }).catch(err => {\n        console.log(err); // There was an error creating the data and logs to console\n\n        setSubmitting(false);\n      });\n    }\n  }\n\n})(LoginForm);\nexport default FormikForm;\n/*\n## STEP 1 - Create Your Formik Form\n\nWe want to create a form to onboard a new user to our system. We need _at least_ the following pieces of information about our new user:\n\n- Name\n- Email\n- Password\n- Terms of Service (checkbox)\n- A Submit button to send our form data to the server.*/","map":{"version":3,"sources":["/home/derp/WebStorm/User-Onboarding/user-onboarding/src/Form.js"],"names":["React","withFormik","Form","Field","Yup","axios","LoginForm","values","errors","touched","isSubmitting","email","password","tos","FormikLoginForm","mapPropsToValues","meal","validationSchema","object","shape","string","required","min","handleSubmit","resetForm","setErrors","setSubmitting","post","then","res","console","log","catch","err","FormikForm"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,KAA3B,QAAwC,QAAxC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,MAAV;AAAkBC,EAAAA,OAAlB;AAA2BC,EAAAA;AAA3B,CAAnB,EAA8D;AAC5D,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,CAACE,KAAR,IAAiBH,MAAM,CAACG,KAAxB,IAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,MAAM,CAACG,KAAX,CADpC,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,OAAzB;AAAiC,IAAA,WAAW,EAAC,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,OAAO,CAACG,QAAR,IAAoBJ,MAAM,CAACI,QAA3B,IAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,MAAM,CAACI,QAAX,CAD1C,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAuC,IAAA,WAAW,EAAC,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,KAA5B;AAAkC,IAAA,OAAO,EAAEL,MAAM,CAACM,GAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eATF,EAaE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,QAAjB;AAA0B,IAAA,IAAI,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAQ,IAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CAbF,EAkBE;AAAQ,IAAA,QAAQ,EAAEH,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF,CADF;AAsBD;;AAED,MAAMI,eAAe,GAAGb,UAAU,CAAC;AACjCc,EAAAA,gBAAgB,CAAC;AAAEJ,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,GAAnB;AAAwBG,IAAAA;AAAxB,GAAD,EAAiC;AAC/C,WAAO;AACLL,MAAAA,KAAK,EAAEA,KAAK,IAAI,EADX;AAELC,MAAAA,QAAQ,EAAEA,QAAQ,IAAI,EAFjB;AAGLC,MAAAA,GAAG,EAAEA,GAAG,IAAI,KAHP;AAILG,MAAAA,IAAI,EAAEA,IAAI,IAAI;AAJT,KAAP;AAMD,GARgC;;AASjCC,EAAAA,gBAAgB,EAAEb,GAAG,CAACc,MAAJ,GAAaC,KAAb,CAAmB;AACnCR,IAAAA,KAAK,EAAEP,GAAG,CAACgB,MAAJ,GACJT,KADI,CACE,iBADF,EAEJU,QAFI,CAEK,mBAFL,CAD4B;AAInCT,IAAAA,QAAQ,EAAER,GAAG,CAACgB,MAAJ,GACPE,GADO,CACH,EADG,EACC,0CADD,EAEPD,QAFO,CAEE,sBAFF;AAJyB,GAAnB,CATe;;AAiBjCE,EAAAA,YAAY,CAAChB,MAAD,EAAS;AAAEiB,IAAAA,SAAF;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA;AAAxB,GAAT,EAAkD;AAC5D,QAAInB,MAAM,CAACI,KAAP,KAAiB,sBAArB,EAA6C;AAC3Cc,MAAAA,SAAS,CAAC;AAAEd,QAAAA,KAAK,EAAE;AAAT,OAAD,CAAT;AACD,KAFD,MAEO;AACLN,MAAAA,KAAK,CACFsB,IADH,CACQ,qCADR,EAC+CpB,MAD/C,EAEGqB,IAFH,CAEQC,GAAG,IAAI;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EADW,CACO;;AAClBL,QAAAA,SAAS;AACTE,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD,OANH,EAOGM,KAPH,CAOSC,GAAG,IAAI;AACZH,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ,EADY,CACM;;AAClBP,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD,OAVH;AAWD;AACF;;AAjCgC,CAAD,CAAV,CAkCrBpB,SAlCqB,CAAxB;AAoCA,eAAe4B,UAAf;AAGA","sourcesContent":["import React from \"react\";\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\n\nfunction LoginForm({ values, errors, touched, isSubmitting }) {\n  return (\n    <Form>\n      <div>\n        {touched.email && errors.email && <p>{errors.email}</p>}\n        <Field type=\"email\" name=\"email\" placeholder=\"Email\" />\n      </div>\n      <div>\n        {touched.password && errors.password && <p>{errors.password}</p>}\n        <Field type=\"password\" name=\"password\" placeholder=\"Password\" />\n      </div>\n      <label>\n        <Field type=\"checkbox\" name=\"tos\" checked={values.tos} />\n        Accept TOS\n      </label>\n      <Field component=\"select\" name=\"meal\">\n        <option value=\"gold\">Gold</option>\n        <option value=\"silver\">Silver</option>\n        <option value=\"platinum\">Platinum</option>\n      </Field>\n      <button disabled={isSubmitting}>Submit</button>\n    </Form>\n  );\n}\n\nconst FormikLoginForm = withFormik({\n  mapPropsToValues({ email, password, tos, meal }) {\n    return {\n      email: email || \"\",\n      password: password || \"\",\n      tos: tos || false,\n      meal: meal || \"silver\"\n    };\n  },\n  validationSchema: Yup.object().shape({\n    email: Yup.string()\n      .email(\"Email not valid\")\n      .required(\"Email is required\"),\n    password: Yup.string()\n      .min(16, \"Password must be 16 characters or longer\")\n      .required(\"Password is required\")\n  }),\n  handleSubmit(values, { resetForm, setErrors, setSubmitting }) {\n    if (values.email === \"alreadytaken@atb.dev\") {\n      setErrors({ email: \"That email is already taken\" });\n    } else {\n      axios\n        .post(\"https://yourdatabaseurlgoeshere.com\", values)\n        .then(res => {\n          console.log(res); // Data was created successfully and logs to console\n          resetForm();\n          setSubmitting(false);\n        })\n        .catch(err => {\n          console.log(err); // There was an error creating the data and logs to console\n          setSubmitting(false);\n        });\n    }\n  }\n})(LoginForm);\n\nexport default FormikForm;\n\n\n/*\n## STEP 1 - Create Your Formik Form\n\nWe want to create a form to onboard a new user to our system. We need _at least_ the following pieces of information about our new user:\n\n- Name\n- Email\n- Password\n- Terms of Service (checkbox)\n- A Submit button to send our form data to the server.*/"]},"metadata":{},"sourceType":"module"}